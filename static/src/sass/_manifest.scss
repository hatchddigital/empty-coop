////
//// Manifest
//// Staging file to pull in all sass components
////

/// Utils
/// Define variables, mixins, placeholders and functions
/// to be used throughout the project
@import
    'utils/variables/_fonts',
    'utils/variables/_colours',
    'utils/variables/_breakpoints',
    'utils/_functions',
    'utils/_mixins',
    'utils/_eggbox',
    'utils/_placeholders';

/// Establish any resource using an @rule
/// Set rules for any CSS resource requiring an @ prefix,
/// such as @animate rules or @font-face fonts
@import 'resources/_webfonts';

/// Create a clean slate
/// Ensure we level any browser differences, so we can build any
/// subsequent declarations on level ground
@import 'html-elements/_normalize';

/// Set base rules that can apply site-wide
/// These should apply to naked elements, no classes should be defined here
@import
    'html-elements/_typography',
    //'html-elements/_code',
    'html-elements/_links',
    'html-elements/_formelements',
    'html-elements/_images',
    'html-elements/_tables';

/// Define modular components
/// Reusable components, called with a class (or classes)
/// that can exist anywhere in the site
@import
    'reusable-components/_template';

/// Set static page elements
/// The scaffolding of the site, defined through elements that occur only
/// once per page, defined via an aria role or ID
@import
    'page-elements/_site-outer',
    'page-elements/_site-header',
    'page-elements/_page-content',
    'page-elements/_site-footer';

/// Set page layout(s)
/// Rules unique to a specific template or set of templates.
/// These definitions should be set from a unique class
@import
    'page-layouts/_layout-template';

/// Pull in 'shame' styles
/// A temporary home for styles that need to be written
/// quickly, by devs not direclty working on the front end
/// or just because something needs to be sketched out real quick
@import '_shame.scss'

/**
 * Breakpoint helper
 * A visual tool to help the developer see
 * when a breakpoint is triggered
 */

/// Import dependancies
@import 
    'utils/variables/_fonts', 
    'utils/variables/_colours', 
    'utils/variables/_breakpoints', 
    'utils/_placeholders',
    'utils/_functions',
    'utils/_mixins';

/// Define media query support
/// @type Variable
/// @alias mqsupport
$mqsupport: true;

/// Properties for the breakpoint guide
/// @type Map
$bpguide:(
    'bg': #fff,
    'text': #333,
    'label': #EF4034
);

/**
 * Set styles for the
 * breakpoint helper
 */
.breakpointguide{
    $counter: 0;
    @include pos(fixed,b0 r0);
    overflow:hidden;
    background: map-get($bpguide,bg);
    color: map-get($bpguide,text);
    font: normal normal 12px/1.5em sans-serif;
    &-label,
    &-value{
        display: block;
        padding: .5em 1em;
    }
    &-label{
        background: map-get($bpguide,label);
        text-shadow: 0 1px 0 fade-out(black,.8);
        color:white;
        text-transform: uppercase;
    }
    &-value{
        font-weight: bold;
    }
    @each $key,$value in $breakpoints{
        $counter: $counter + 1;
        @include breakpoint($key){
            &-label{
                background:adjust-hue(map-get($bpguide,label), 0deg + (50 *$counter) );
                &:before{
                    content:'#{$key}';
                }
            }
            &-value{
                &:before{
                    content:'#{processforguide($key)}';
                }
            }
        }
    }
}

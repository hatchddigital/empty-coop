/**
 * Settings mixins / functions
 *
 * Helpers that relate directly to the settings files
 */


/**
 * Responsive breakpoints
 */

    // Retrieve  breakpoint type
    @function get-breakpoint-value($point, $ori, $index) {
      $values: map-get($breakpoints, $point);
      $items: ();
      @if $ori == 'vert' {
          $items: nth($values, 2);
        }
      @else if $ori == 'horz' {
          $items: nth($values, 1);
      }
      @if length($items) >= $index {
        $value: nth($items, $index);
        @if $value {
          @return pxem(nth($items, $index));
        }
      }
      @return false;
    }

    // Convert pixel breakpoint value to em
    @function pxem($target){
      @return ($target / 16)#{'em'};
    }

    // Get min-width breakpoint value
    @function minw($point) {
      $value: get-breakpoint-value($point, 'horz', 1);
      @if $value {
        @return 'and (min-width: ' + $value + ')';
      }
      @return '';
    }

    // Get max-width breakpoint value
    @function maxw($point) {
      $value: get-breakpoint-value($point, 'horz', 2);
      @if $value {
        @return 'and (max-width: ' + $value + ')';
      }
      @return '';
    }

    // Get min-height breakpoint value
    @function minh($point) {
      $value: get-breakpoint-value($point, 'vert', 1);
      @if $value {
        @return 'and (min-height: ' + $value + ')';
      }
      @return '';
    }

    // Get max-height breakpoint value
    @function maxh($point) {
      $value: get-breakpoint-value($point, 'vert', 2);
      @if $value {
        @return 'and (max-height: ' + $value + ')';
      }
      @return '';
    }

    // Build the media query
    @function sizes($point) {
      @return minw($point) + maxw($point) + minh($point) + maxh($point)
    }

    // Set breakpoint mixin
    @mixin breakpoint($point){
      @if $mq-support {
        @media screen #{sizes($point)} {
          @content
        }
      }
      @else {
        @if $point == $static-breakpoint{
          @content
        }
      }
    }

/**
 * Typography
 */

    @function fontsize($size){
        @return map-get($font-sizes,$size);
    }
    @function fontfamily($family){
        @return map-get($font-famillies,$family);
    }

/**
 * Colours
 */
    @function color($color){
        @return map-get($colors,$color);
    }

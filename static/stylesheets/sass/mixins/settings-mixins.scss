/// Settings mixins / functions
/// Helpers that relate directly to the settings files

/// @group Reusable functions

/// Getter/setter for maps
/// @author Jack Armley
/// @param {Variable} $map - Map to get value from
/// @param {Variable} $key - Key to get within map
/// @param {Number} $index [false] - If map is multi-dimensional, state index
/// @param {String} $strict [true] - Return the key if it idn't within the stated map
@function get($map, $key, $index:false, $strict: true){
    $output:'';
    @if (map_has_key($map,$key)){
        // If map has multi-value objects
        @if ($index){
            $output: nth(map-get($map,$key),$index);
        }
        // If map is simple
        @else{
            $output: map-get($map,$key);
        }
        @return $output;
    }
    @else if ($key == false){
        @return $key;
    }
    @else{
        @if $strict{
            @warn '#{$key} is not a valid value';
            @return false;
        }
        @else{
            @return $key;
        }
    }
}

/// Aliases for common map calls

/// Font-size getter
/// @author Jack Armley
/// @group fonts
/// @param {String} $key from `$font-sizes`
/// @require {Variable} $font-sizes
@function fontsize($key){
    @return get($font-sizes,$key);
}

/// Font-family getter
/// @author Jack Armley
/// @group fonts
/// @param {String} $key from `$font-famillies`
/// @require {Variable} $font-famillies
@function fontfamily($key){
    @return get($font-famillies,$key)
}

/// Color getter
/// @author Jack Armley
/// @group colors
/// @param {String} $key from `$colors`
/// @require {Variable} $colors
@function color($key){
    @return get($colors,$key,1);
}

/// Generate a percentage font size
/// @author Jack Armley
/// @group fonts
/// @param {Number} $size - Target font size in px
@function fontbase($size){
    $base: (100/16 * $size + '%');
    @return unquote($base);
}

/// Generic list contains function
/// @author Lu Nelson
/// @link https://github.com/sass/sass/issues/543
/// @param {String} $list - List to check
/// @param {String|Number|Variable} $var - Item in list
@function contains($list,$var) {
    $listcontains: false;
    @each $item in $list {
      @if $item == $var {
        $listcontains: true; 
      } 
    }
    @return $listcontains;
}
